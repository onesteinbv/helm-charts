# Default values for runboat.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/sbidoul/runboat
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: ""
  annotations: {}
  host: chart-example.local
  tls: 
    enabled: false
    secretName: 

resources: 
  requests:
    cpu: 250m
    memory: 128Mi
# limits:
#   cpu: 100m
#   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /api/v1/status
    port: http
readinessProbe:
  httpGet:
    path: /api/v1/status
    port: http

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

runboat:
  buildNamespace: "runboat-builds"
  adminUser: "admin"
  adminSecret:
    name: ""
    key: ""  # default: "password"
  buildSecret:
    name: ""
    key: ""
  githubTokenSecret: 
    name: "" 
    key: ""  # default: "githubToken"
  maxInitializing: 5
  maxStarted: 15
  maxDeployed: 20
  buildEnv: {}
  #  PGHOST: "postgresql"
  #  PGPORT: "odoo"
  #  PGUSER: "odoo"
  buildTemplateVars: {}
  buildDomain: ""
  repos: 
  # - repo: "^onesteinbv/addons-curq$"
  #   branch: "^16.0$"
  #   builds:
  #     - image: "ghcr.io/oca/oca-ci/py3.8-odoo15.0:latest"

postgresql:
  enabled: true
  namespaceOverride: "runboat-builds"
  image:
    tag: 13.18.0
  auth:
    username: odoo
    password: odoo
    database: postgres
